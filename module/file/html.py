from module.table.plotTable import plotSummaryTable
from module.plot.pie.piechart import barcodePropToHtml
from module.plot.histogram.avgRead import avgReadToHtml
from module.plot.histogram.contourPlot import seqlenAvgscoreToHtml
from module.plot.pie.pie_chart import create_all_pie
from module.plot.histogram.basecalled_read_lenght import create_all_histogram
from module.plot.histogram.basecalled_phed import create_phedquality
import plotly
import sys
def createHtmlReport(dataframe,filename):
    #-------------------html base text-------------------------
    html_start = """
    <head>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script> 
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
    <style>
    div {
    display: block;
    margin-left: auto;
    margin-right: auto;
    }
    </style>
    </head>
    <body>
    <p class="fs-1">FastQ Summary Report<p>
    <div class="container">
    <div class="justify-content-center">
    """
    html_end = """
    </div>
    </div>
    </body>
    """

    html_readlength = """
    <div>
    <p class="fs-2">Basecalled reads length</p>
    <p class="fs-6">Density of reads (y-axis) for each sequence length (x-axis) with percentile at 10%, 25%, 50% (median), 75%, 90%. Using data with sequence length of read over 200.</p>
    </div>
    """
    html_readphred = """
    <div>
    <p class="fs-2">Basecalled reads PHRED quality</p>
    <p class="fs-6">Density of reads (y-axis) for each PHRED Quality Score(x-axis) with percentile at 10%, 25%, 50% (median), 75%, 90%. Using data with sequence length of read over 200.</p>
    </div>
    """

    html_contour = """
    <div>
    <p class="fs-2">Histogram Contour of Sequence length & PHRED Quality Score</p>
    <p class="fs-6">The graph shows the density plot in Histogram Contour 2D. Y-axis represent the Sequence length while X-axis show the PHRED Quality. Darker color shade represent the higher density of the data.</p>
    </div>
    """
    html_piechart = """
    <div>
    <p class="fs-2">Barcode Proportion</p>
    <p class="fs-6">The graph shows the proportion of all barcode in pie chart format. In addition, drop down menu show the proportion of Pass Read of all Barcodes.</p>
    </div>
    """
    html_summary ="""
    <p class="fs-2">Summary Statistic</p>
    <p class="fs-6">The table shows the overall summary statistic of the FastQ file such as Number of Read, Number of Base, and PHRED Quality. The table can be altered to show the specific barcode of interest by click a the button above the table</p>
    """

    html_opening = """
    <p class="fs-6">This is a report generated by "FastReport Program" based on "The HyperText Markup Language"  or HTML.<p>
    """
    #-------------------html writer-------------------------
    print("Generating Html Report ...")
    Html_file= open("./"+filename+"_report.html","w")
    Html_file.write(html_start)
    Html_file.write(html_opening)
    Html_file.write(html_summary)
    Html_file.write(plotly.offline.plot(plotSummaryTable(dataframe), include_plotlyjs=False, output_type='div'))
    Html_file.write(html_piechart)
    Html_file.write(plotly.offline.plot(create_all_pie(dataframe), include_plotlyjs=False, output_type='div'))
    Html_file.write(html_readlength)
    Html_file.write(plotly.offline.plot(create_all_histogram(dataframe), include_plotlyjs=False, output_type='div'))
    Html_file.write(html_readphred)
    Html_file.write(plotly.offline.plot(create_phedquality(dataframe), include_plotlyjs=False, output_type='div'))
    Html_file.write(html_contour)
    Html_file.write(plotly.offline.plot(seqlenAvgscoreToHtml(dataframe), include_plotlyjs=False, output_type='div'))
    

    Html_file.write(html_end)
    Html_file.close()
    sys.stdout.write('\x1b[1A')
    sys.stdout.write('\x1b[2K')
    print("Html Report Complete")
